knitr::opts_knit$set(root.dir = "/Users/raymondotoo/Library/CloudStorage/Box-Box/Lab Research Studies/Raymond/JvRad_Batch_1/Proteomics data/AllenAR_092723/protein_analysis/02_DA_results/protein_combined_results.csv")
knitr::opts_knit$set(root.dir = "/Users/raymondotoo/Library/CloudStorage/Box-Box/Lab Research Studies/Raymond/JvRad_Batch_1/Proteomics data/AllenAR_092723/protein_analysis/02_DA_results/protein_combined_results.csv")
library("DEP") # for Proteomics analysis
library("dplyr") # for data manipulation
library("pheatmap")
library("SummarizedExperiment")
jvrad <- read.csv("/Users/raymondotoo/Library/CloudStorage/Box-Box/Lab Research Studies/Raymond/JvRad_Batch_1/Proteomics data/AllenAR_092723/protein_analysis/02_DA_results/protein_combined_results.csv")
colnames(jvrad)
#appropriate cleaning for the gene_symbol column but maintain it for consistency the uniprot_id column which doesnt need this cleaning as this doesnt change anything
jvrad$UniProtIds <- sub(".*=", "", jvrad$uniprot_id)
jvrad$UniProtIds <- sub("\"", "", jvrad$uniprot_id)
jvrad$UniProtIds <- sub("\"$", "", jvrad$uniprot_id)
head(jvrad)
data_unique <- make_unique(jvrad, "uniprot_id", "uniprot_id", delim =";")
data_unique
jvrad$name %>% duplicated() %>% any()
jvrad
dim(jvrad)
label <- c("s200", "s201", "s202", "s203", "s204",
"s400", "s401", "s402", "s503", "s504")
condition <- c("ir", "ir", "ir", "ir", "ir",
"sham", "sham", "sham", "sham", "sham")
replicate <- rep(1:5,2)
label <- as.character(label)
condition <- as.character(condition)
#create the dataframe
experimental_design <- data.frame(label=label, condition=condition, replicate = as.double(replicate))
experimental_design
typeof(experimental_design)
dim(jvrad)
label <- c("s200", "s201", "s202", "s203", "s204",
"s400", "s401", "s402", "s503", "s504")
condition <- c("ir", "ir", "ir", "ir", "ir",
"sham", "sham", "sham", "sham", "sham")
replicate <- rep(1:5,2)
label <- as.character(label)
condition <- as.character(condition)
#create the dataframe
experimental_design <- data.frame(label=label, condition=condition, replicate = as.double(replicate))
experimental_design
typeof(experimental_design)
# Use grep to find the column numbers (indices) that match the specified patterns
#selects columns that starts with s2,s4 or s5. this captures all the samples
exp_columns <- grep("^s2|^s4|^s5", colnames(data_unique))
#used with experimental design
data_se<- make_se(data_unique, exp_columns, experimental_design)
exp_columns
data_se
meanSdPlot(data_se)
plot_frequency(data_se) # first check the number of proteins not quantified in any of the samples
data_filt <- filter_missval(data_se, thr = 0)
plot_frequency(data_filt)
plot_numbers(data_filt)
library("ggplot2")
p <- plot_coverage(data_filt) + scale_fill_brewer(palette = "Paired")
p <- p+ geom_text(aes(label=Freq), vjust=1.6, color="white")
p
hist(2^assay(data_se)[,"ir_1"],n=1000) # on orginal scale using onesample
hist(assay(data_se)[,"ir_1"],n=1000) # log2 scale
plot(density(assay(data_se)[,"ir_1"],na.rm=TRUE))
#Apply VSN normalisation
data_norm <- normalize_vsn(data_filt) # VSN is performed on original scale
#Apply median normalisation
data_norm_med <- data_filt
#assay(data_norm_med)<-proteus::normalizeMedian(assay(data_filt))
#Apply quantile normalisation
data_norm_quant <- data_filt
assay(data_norm_quant)<-limma::normalizeQuantiles(assay(data_filt))
mds_plot <- meanSdPlot(data_norm)
# specify colors
sub_cols <- c(ir= "#e63946", sham="blue")
p.norm <- plot_normalization(data_filt, data_norm)
p.norm + scale_fill_manual(values = sub_cols)
plot_missval(data_filt)
plot_detect(data_filt) # make df such that average of a gene in all conditions in one column and
data_imp <- impute(data_filt, fun = "MinProb", q = 0.01)
plot_imputation(data_norm, data_imp)
library("ggplot2")
sub_cols <- c(ir= "#e63946", sham="blue")
p.pca <- plot_pca(data_imp, x = 1, y = 2,
n = nrow(data_imp@assays), # use all detected proteins
point_size = 5,
indicate = "condition",
label=F) +
ggtitle("JvRad") +
scale_color_manual("Treatments", values = sub_cols)
p.pca
data_diff<- test_diff(data_imp,type = "all")
dep <- add_rejections(data_diff, alpha = 0.05, lfc = log2(1.5))
dep
#make a volcano plot of the selected contrast
plot_volcano(dep, contrast = "ir_vs_sham", label_size = 2, add_names= TRUE)
#plot a number of selcted proteins in on plot
plot_single(dep, proteins = c("A0A087WRT9","A0A0A6YVU8", "S4R1M9", "V9GX34"), type = "centered")
#plot only one protein
plot_single(dep, proteins = "V9GX34", type = "centered")
cor_matrix <- plot_cor(data_imp,
significant = F,
lower = 0,
upper = 1,
pal = "GnBu",
indicate = c("condition", "replicate"),
plot = F)
cor_matrix
pheatmap(cor_matrix)
dep <- add_rejections(data_diff, alpha = 0.05, lfc = 0.0)
png("jvrad_heatmap.png", width = 10, height = 10, units = 'in', res = 600)
plot_heatmap(dep,
type = "centered",
kmeans = T,
col_limit = 0.1,
show_row_names = T,
column_title = "JvRad Heatmap",
row_font_size=8,
indicate = c("condition", "replicate"),
clustering_distance = "spearman",
plot = TRUE)
dev.off()
#plot comparisons
p.heat <- plot_heatmap(dep,
type = "contrast",
kmeans = F,
col_limit = 0.3,
show_row_names = T,
indicate = c("condition", "replicate"),
show_row_dend= T,
row_dend_side = "right",
width = 0.5,
gap = unit(1, "mm"))
png("jvrad_volcanoPlot.png", width = 10, height = 6, units = 'in', res = 600)
remove_grids <- theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"))
ir_vs_sham <- plot_volcano(dep,
contrast = "ir_vs_sham",
label_size = 2,
add_names = TRUE) + remove_grids
ir_vs_sham
dev.off()
png("jvrad_key_protsSinglePlots.png", width = 10, height = 10, units = 'in', res = 600)
key_prots <- c("P07758","P0DW87","P28661", "P54754", "Q3UV17","Q60766","Q68FL4","Q6GQW0","Q6PDN3","Q6SKR2")
rep_cols <- c("1"="#ffc49b","2"="#e05780","3"="#adb6c4","4"="green","5"="blue" )
plot_single(dep,
proteins = key_prots,
type = "centered") +
scale_color_manual("Replicate", values = rep_cols)
dev.off()
data_results <- get_results(dep)
#write.csv(data_results, "./results/L2_comparison_all.csv")
# Number of significant proteins
data_results %>% filter(significant) %>% nrow()
data_results <- get_results(dep)
#write.csv(data_results, "./results/L2_comparison_all.csv")
# Number of significant proteins
data_results %>% filter(significant) %>% nrow()
data_results
colnames(data_results)
# Install BiocManager if not already installed
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
# Use BiocManager to install Bioconductor packages
BiocManager::install("pathview")
BiocManager::install("enrichplot")
BiocManager::install("DOSE")
library(clusterProfiler)
library(pathview)
library(enrichplot)
library(DOSE)
jv_rad <- data_results[, c("name","ir_vs_sham_significant", "ir_vs_sham_ratio", "ir_vs_sham_p.adj")]
foldchanges.1 = jv_rad$ir_vs_sham_ratio
names(foldchanges.1) = jv_rad$name
# we use a threshold of -1.2 or + 1.2
gene <- names(foldchanges.1)[abs(foldchanges.1) > 0.00]
gene
png("jvrad_keggEnrichPathways.png", width = 10, height = 6, units = 'in', res = 600)
#Identify KEGG pathways that are enriched.
ir_vs_sham_kegg <- enrichKEGG(gene,
organism = 'mouse',
keyType = "uniprot",
pvalueCutoff = 0.05)
#plot results
barplot(ir_vs_sham_kegg,
drop=TRUE,
showCategory = 10,
title = "KEGG Enrichment Pathways",
font.size = 12)
ir_vs_sham_kegg
ir_vs_sham_kegg[0:100]
dev.off()
# Install BiocManager if not already installed
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
# Use BiocManager to install Bioconductor packages
BiocManager::install("org.Mm.eg.db")
BiocManager::install("GO.db")
BiocManager::install("topGO")
BiocManager::install("KEGG.db")
BiocManager::install("ReactomePA")
png("jvrad_cnetplot.png", width = 10, height = 10, units = 'in', res = 600)
enrichplot::cnetplot(ir_vs_sham_kegg,categorySize = "pvalue",
foldChange = foldchanges.1, colorEdge= F)
dev.off()
png("enrichMKEGG.png", width = 10, height = 6, units = 'in', res = 600)
mkk <- enrichMKEGG(gene = gene,
organism = 'mmu',
pvalueCutoff = 0.05,
minGSSize = 5,
keyType = "uniprot",
qvalueCutoff = 0.05)
barplot(mkk,
drop=TRUE,
showCategory = 10,
title = "KEGG Enrichment Pathways",
font.size = 12)
head(mkk)
mkk[0:100]
dev.off()
library(pathview)
pathview(ir_vs_sham_kegg,
pathway.id = "mmu05014",
species = "mouse",
plot.col.key= TRUE,
res=600)
library("ggplot2")
sub_cols <- c(ir= "#e63946", sham="blue")
p.pca <- plot_pca(data_imp, x = 5, y = 5,
n = nrow(data_imp@assays), # use all detected proteins
point_size = 5,
indicate = "condition",
label=F) +
ggtitle("JvRad") +
scale_color_manual("Treatments", values = sub_cols)
p.pca
library("ggplot2")
sub_cols <- c(ir= "#e63946", sham="blue")
p.pca <- plot_pca(data_imp, x = 5, y = 4,
n = nrow(data_imp@assays), # use all detected proteins
point_size = 5,
indicate = "condition",
label=F) +
ggtitle("JvRad") +
scale_color_manual("Treatments", values = sub_cols)
p.pca
library("ggplot2")
sub_cols <- c(ir= "#e63946", sham="blue")
p.pca <- plot_pca(data_imp, x = 6, y = 4,
n = nrow(data_imp@assays), # use all detected proteins
point_size = 5,
indicate = "condition",
label=F) +
ggtitle("JvRad") +
scale_color_manual("Treatments", values = sub_cols)
p.pca
library("ggplot2")
sub_cols <- c(ir= "#e63946", sham="blue")
p.pca <- plot_pca(data_imp, x = 10, y = 4,
n = nrow(data_imp@assays), # use all detected proteins
point_size = 5,
indicate = "condition",
label=F) +
ggtitle("JvRad") +
scale_color_manual("Treatments", values = sub_cols)
p.pca
library("ggplot2")
sub_cols <- c(ir= "#e63946", sham="blue")
p.pca <- plot_pca(data_imp, x = 5, y = 10,
n = nrow(data_imp@assays), # use all detected proteins
point_size = 5,
indicate = "condition",
label=F) +
ggtitle("JvRad") +
scale_color_manual("Treatments", values = sub_cols)
p.pca
library("ggplot2")
sub_cols <- c(ir= "#e63946", sham="blue")
p.pca <- plot_pca(data_imp, x = 10, y = 10,
n = nrow(data_imp@assays), # use all detected proteins
point_size = 5,
indicate = "condition",
label=F) +
ggtitle("JvRad") +
scale_color_manual("Treatments", values = sub_cols)
p.pca
library("ggplot2")
sub_cols <- c(ir= "#e63946", sham="blue")
p.pca <- plot_pca(data_imp, x = 5, y = 2,
n = nrow(data_imp@assays), # use all detected proteins
point_size = 5,
indicate = "condition",
label=F) +
ggtitle("JvRad") +
scale_color_manual("Treatments", values = sub_cols)
p.pca
library("ggplot2")
sub_cols <- c(ir= "#e63946", sham="blue")
p.pca <- plot_pca(data_imp, x = 2, y = 2,
n = nrow(data_imp@assays), # use all detected proteins
point_size = 5,
indicate = "condition",
label=F) +
ggtitle("JvRad") +
scale_color_manual("Treatments", values = sub_cols)
p.pca
library("ggplot2")
sub_cols <- c(ir= "#e63946", sham="blue")
p.pca <- plot_pca(data_imp, x = 1, y = 2,
n = nrow(data_imp@assays), # use all detected proteins
point_size = 5,
indicate = "condition",
label=F) +
ggtitle("JvRad") +
scale_color_manual("Treatments", values = sub_cols)
p.pca
library("ggplot2")
sub_cols <- c(ir= "#e63946", sham="blue")
p.pca <- plot_pca(data_imp, x = 2, y = 4,
n = nrow(data_imp@assays), # use all detected proteins
point_size = 5,
indicate = "condition",
label=F) +
ggtitle("JvRad") +
scale_color_manual("Treatments", values = sub_cols)
p.pca
library("ggplot2")
sub_cols <- c(ir= "#e63946", sham="blue")
p.pca <- plot_pca(data_imp, x = 4, y = 8,
n = nrow(data_imp@assays), # use all detected proteins
point_size = 5,
indicate = "condition",
label=F) +
ggtitle("JvRad") +
scale_color_manual("Treatments", values = sub_cols)
p.pca
library("ggplot2")
sub_cols <- c(ir= "#e63946", sham="blue")
p.pca <- plot_pca(data_imp, x = 4, y = 6,
n = nrow(data_imp@assays), # use all detected proteins
point_size = 5,
indicate = "condition",
label=F) +
ggtitle("JvRad") +
scale_color_manual("Treatments", values = sub_cols)
p.pca
library("ggplot2")
sub_cols <- c(ir= "#e63946", sham="blue")
p.pca <- plot_pca(data_imp, x = 2, y = 4,
n = nrow(data_imp@assays), # use all detected proteins
point_size = 5,
indicate = "condition",
label=F) +
ggtitle("JvRad") +
scale_color_manual("Treatments", values = sub_cols)
p.pca
knitr::opts_knit$set(root.dir = "/Users/raymondotoo/Library/CloudStorage/Box-Box/Lab Research Studies/Raymond/Jv SFN 6/proteomics_results/protein_analysis/02_differential_abundance/")
library("ggplot2")
sub_cols <- c(Saline.0Gy= "#e63946", Saline.10Gy="green", SFN.0Gy="blue", SFN.10Gy="purple")
p.pca <- plot_pca(data_imp, x = 2, y = 4,
n = nrow(data_imp@assays), # use all detected proteins
point_size = 5,
indicate = "condition",
label=F) +
ggtitle("JvSFN_6") +
scale_color_manual("Treatments", values = sub_cols)
p.pca
library("ggplot2")
sub_cols <- c(Saline.0Gy= "#e63946", Saline.10Gy="green", SFN.0Gy="blue", SFN.10Gy="purple")
p.pca <- plot_pca(data_imp, x = 1, y = 2,
n = nrow(data_imp@assays), # use all detected proteins
point_size = 5,
indicate = "condition",
label=F) +
ggtitle("JvSFN_6") +
scale_color_manual("Treatments", values = sub_cols)
p.pca
knitr::opts_knit$set(root.dir = "/Users/raymondotoo/Library/CloudStorage/Box-Box/Lab Research Studies/Raymond/Jv SFN 6/proteomics_results/protein_analysis/02_differential_abundance/")
knitr::opts_knit$set(root.dir = "/Users/raymondotoo/Library/CloudStorage/Box-Box/Lab Research Studies/Raymond/Jv SFN 6/proteomics_results/protein_analysis/02_differential_abundance/")
library("DEP") # for Proteomics analysis
library("dplyr") # for data manipulation
library("pheatmap")
library("SummarizedExperiment")
jvsfn_6 <- read.csv("combined_results.csv")
colnames(jvsfn_6)
jvsfn_6$UniProtIds <- sub(".*=", "", jvsfn_6$UniProtIds)
jvsfn_6$UniProtIds <- sub("\"", "", jvsfn_6$UniProtIds)
jvsfn_6$UniProtIds <- sub("\"$", "", jvsfn_6$UniProtIds)
head(jvsfn_6)
data_unique <- make_unique(jvsfn_6, "uniprot_id", "uniprot_id", delim =";")
jvsfn_6$name %>% duplicated() %>% any()
jvsfn_6
dim(jvsfn_6)
label <- c("s400L_HIPP", "s401L_HIPP", "s402L_HIPP", "s403L_HIPP", "s404L_HIPP",
"s800L_HIPP", "s801L_HIPP", "s802L_HIPP", "s803L_HIPP", "s804L_HIPP",
"s200L_HIPP", "s201L_HIPP", "s202L_HIPP", "s203L_HIPP", "s204L_HIPP",
"s600L_HIPP", "s601L_HIPP", "s602L_HIPP", "s603L_HIPP", "s604L_HIPP")
condition <- c("SFN+10Gy", "SFN+10Gy", "SFN+10Gy", "SFN+10Gy", "SFN+10Gy",
"SFN+0Gy", "SFN+0Gy", "SFN+0Gy", "SFN+0Gy", "SFN+0Gy",
"Saline+10Gy", "Saline+10Gy", "Saline+10Gy", "Saline+10Gy", "Saline+10Gy",
"Saline+0Gy", "Saline+0Gy", "Saline+0Gy", "Saline+0Gy", "Saline+0Gy")
replicate <- rep(1:5,4)
label <- as.character(label)
condition <- as.character(condition)
#create the dataframe
experimental_design <- data.frame(label=label, condition=condition, replicate = as.double(replicate))
experimental_design
typeof(experimental_design)
label <- c("s400L_HIPP", "s401L_HIPP", "s402L_HIPP", "s403L_HIPP", "s404L_HIPP",
"s800L_HIPP", "s801L_HIPP", "s802L_HIPP", "s803L_HIPP", "s804L_HIPP",
"s200L_HIPP", "s201L_HIPP", "s202L_HIPP", "s203L_HIPP", "s204L_HIPP",
"s600L_HIPP", "s601L_HIPP", "s602L_HIPP", "s603L_HIPP", "s604L_HIPP")
condition <- c("SFN+10Gy", "SFN+10Gy", "SFN+10Gy", "SFN+10Gy", "SFN+10Gy",
"SFN+0Gy", "SFN+0Gy", "SFN+0Gy", "SFN+0Gy", "SFN+0Gy",
"Saline+10Gy", "Saline+10Gy", "Saline+10Gy", "Saline+10Gy", "Saline+10Gy",
"Saline+0Gy", "Saline+0Gy", "Saline+0Gy", "Saline+0Gy", "Saline+0Gy")
replicate <- rep(1:5,4)
label <- as.character(label)
condition <- as.character(condition)
#create the dataframe
experimental_design <- data.frame(label=label, condition=condition, replicate = as.double(replicate))
experimental_design
typeof(experimental_design)
exp_columns <- grep("_HIPP$", colnames(data_unique)) # get Hyp column numbers
#used with experimental design
data_se<- make_se(data_unique, exp_columns, experimental_design)
exp_columns
data_se
meanSdPlot(data_se)
plot_frequency(data_se) # first check the number of proteins not quantified in any of the samples
data_filt <- filter_missval(data_se, thr = 0)
plot_frequency(data_filt)
plot_numbers(data_filt)
library("ggplot2")
p <- plot_coverage(data_filt) + scale_fill_brewer(palette = "Paired")
p <- p+ geom_text(aes(label=Freq), vjust=1.6, color="white")
p
hist(2^assay(data_se)[,"SFN.10Gy_1"],n=1000) # on orginal scale using onesample
hist(assay(data_se)[,"SFN.10Gy_1"],n=1000) # log2 scale
plot(density(assay(data_se)[,"SFN.10Gy_1"],na.rm=TRUE))
#Apply VSN normalisation
data_norm <- normalize_vsn(data_filt) # VSN is performed on original scale
#Apply median normalisation
data_norm_med <- data_filt
#assay(data_norm_med)<-proteus::normalizeMedian(assay(data_filt))
#Apply quantile normalisation
data_norm_quant <- data_filt
assay(data_norm_quant)<-limma::normalizeQuantiles(assay(data_filt))
mds_plot <- meanSdPlot(data_norm)
# specify colors
sub_cols <- c(Saline.0Gy= "#e63946", Saline.10Gy="green", SFN.0Gy="blue", SFN.10Gy="purple")
p.norm <- plot_normalization(data_filt, data_norm)
p.norm + scale_fill_manual(values = sub_cols)
plot_missval(data_filt)
plot_detect(data_filt) # make df such that average of a gene in all conditions in one column and
data_imp <- impute(data_filt, fun = "MinProb", q = 0.01)
plot_imputation(data_norm, data_imp)
library("ggplot2")
sub_cols <- c(Saline.0Gy= "#e63946", Saline.10Gy="green", SFN.0Gy="blue", SFN.10Gy="purple")
p.pca <- plot_pca(data_imp, x = 1, y = 2,
n = nrow(data_imp@assays), # use all detected proteins
point_size = 5,
indicate = "condition",
label=F) +
ggtitle("JvSFN_6") +
scale_color_manual("Treatments", values = sub_cols)
p.pca
library("ggplot2")
sub_cols <- c(Saline.0Gy= "#e63946", Saline.10Gy="green", SFN.0Gy="blue", SFN.10Gy="purple")
p.pca <- plot_pca(data_imp, x = 2, y = 4,
n = nrow(data_imp@assays), # use all detected proteins
point_size = 5,
indicate = "condition",
label=F) +
ggtitle("JvSFN_6") +
scale_color_manual("Treatments", values = sub_cols)
p.pca
library("ggplot2")
sub_cols <- c(Saline.0Gy= "#e63946", Saline.10Gy="green", SFN.0Gy="blue", SFN.10Gy="purple")
p.pca <- plot_pca(data_imp, x = 2, y = 6,
n = nrow(data_imp@assays), # use all detected proteins
point_size = 5,
indicate = "condition",
label=F) +
ggtitle("JvSFN_6") +
scale_color_manual("Treatments", values = sub_cols)
p.pca
library("ggplot2")
sub_cols <- c(Saline.0Gy= "#e63946", Saline.10Gy="green", SFN.0Gy="blue", SFN.10Gy="purple")
p.pca <- plot_pca(data_imp, x = 2, y = 4,
n = nrow(data_imp@assays), # use all detected proteins
point_size = 5,
indicate = "condition",
label=F) +
ggtitle("JvSFN_6") +
scale_color_manual("Treatments", values = sub_cols)
p.pca
library("ggplot2")
sub_cols <- c(Saline.0Gy= "#e63946", Saline.10Gy="green", SFN.0Gy="blue", SFN.10Gy="purple")
p.pca <- plot_pca(data_imp, x = 1, y = 2,
n = nrow(data_imp@assays), # use all detected proteins
point_size = 5,
indicate = "condition",
label=F) +
ggtitle("JvSFN_6") +
scale_color_manual("Treatments", values = sub_cols)
p.pca
